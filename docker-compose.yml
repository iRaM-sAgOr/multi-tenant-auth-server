version: '3.8'

services:
  # Multi-Tenant Authentication Service
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: multi-tenant-auth-service
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Application Settings
      APP_NAME: "Multi-Tenant Authentication Service"
      APP_VERSION: "1.0.0"
      ENVIRONMENT: "production"
      DEBUG: "false"
      HOST: "0.0.0.0"
      PORT: "8000"
      
      # Keycloak Configuration
      KEYCLOAK_SERVER_URL: "http://keycloak:8080"
      KEYCLOAK_STARTUP_CHECK_ENABLED: "true"
      KEYCLOAK_STARTUP_CHECK_RETRIES: "5"
      KEYCLOAK_STARTUP_CHECK_RETRY_DELAY: "10"
      KEYCLOAK_STARTUP_CHECK_EXIT_ON_FAILURE: "true"
      
      # Admin credentials removed for security - now passed per-request in admin APIs
      # KEYCLOAK_ADMIN_USERNAME: "${KEYCLOAK_ADMIN_USER:-admin}"
      # KEYCLOAK_ADMIN_PASSWORD: "${KEYCLOAK_ADMIN_PASSWORD:-admin123}"
      
      # Security Settings
      SECRET_KEY: "${SECRET_KEY:-your-super-secret-key-change-this-in-production}"
      ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
      REFRESH_TOKEN_EXPIRE_DAYS: "7"
      
      # CORS Settings
      CORS_ORIGINS: '["http://localhost:3000", "https://your-frontend-domain.com"]'
      CORS_ALLOW_CREDENTIALS: "true"
      CORS_ALLOW_METHODS: '["*"]'
      CORS_ALLOW_HEADERS: '["*"]'
      
      # Logging
      LOG_LEVEL: "INFO"
      LOG_FORMAT: "json"
    networks:
      - auth-network
    depends_on:
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Keycloak Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak-server
    restart: unless-stopped
    command: start --optimized
    environment:
      # Keycloak Admin
      KC_BOOTSTRAP_ADMIN_USERNAME: "${KEYCLOAK_ADMIN_USER:-admin}"
      KC_BOOTSTRAP_ADMIN_PASSWORD: "${KEYCLOAK_ADMIN_PASSWORD:-admin123}"
      
      # Database Configuration
      KC_DB: postgres
      KC_DB_URL: "${KC_DB_URL:-jdbc:postgresql://postgres:5432/keycloak}"
      KC_DB_USERNAME: "${KC_DB_USERNAME:-keycloak}"
      KC_DB_PASSWORD: "${KC_DB_PASSWORD:-keycloak123}"
      
      # Production Settings
      KC_HOSTNAME: "${KC_HOSTNAME:-localhost}"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
      KC_PROXY: "edge"
      
      # Performance Settings
      KC_CACHE: "ispn"
      KC_CACHE_STACK: "kubernetes"
      
      # Logging
      KC_LOG_LEVEL: "INFO"
    ports:
    # Only expose internally to auth-service by default
    # Uncomment below line to expose Keycloak admin console externally
    # - "8080:8080"
    networks:
      - auth-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - keycloak-data:/opt/keycloak/data

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${POSTGRES_DB:-keycloak}"
      POSTGRES_USER: "${POSTGRES_USER:-keycloak}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-keycloak123}"
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
    # Only expose internally by default
    # Uncomment below line to expose PostgreSQL externally for debugging
    # - "5432:5432"
    networks:
      - auth-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-keycloak} -d ${POSTGRES_DB:-keycloak}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates directory
    networks:
      - auth-network
    depends_on:
      - auth-service
      - keycloak
    profiles:
      - production  # Only start with --profile production

networks:
  auth-network:
    driver: bridge
    name: multi-tenant-auth-network

volumes:
  postgres-data:
    name: postgres-data
  keycloak-data:
    name: keycloak-data
